[{"/Users/isamu/Desktop/jp/kelt/src/app/components/Card.tsx":"1","/Users/isamu/Desktop/jp/kelt/src/app/components/CarouselType1.tsx":"2","/Users/isamu/Desktop/jp/kelt/src/app/components/CeoMessage.tsx":"3","/Users/isamu/Desktop/jp/kelt/src/app/components/ContactForm.tsx":"4","/Users/isamu/Desktop/jp/kelt/src/app/components/DescriptionList.tsx":"5","/Users/isamu/Desktop/jp/kelt/src/app/components/FirstView.tsx":"6","/Users/isamu/Desktop/jp/kelt/src/app/components/Footer.tsx":"7","/Users/isamu/Desktop/jp/kelt/src/app/components/Grid.tsx":"8","/Users/isamu/Desktop/jp/kelt/src/app/components/ImageScroll.tsx":"9","/Users/isamu/Desktop/jp/kelt/src/app/components/ImageSlideShow.tsx":"10","/Users/isamu/Desktop/jp/kelt/src/app/components/LoadingScreen.tsx":"11","/Users/isamu/Desktop/jp/kelt/src/app/components/MessageSection.tsx":"12","/Users/isamu/Desktop/jp/kelt/src/app/components/Navbar.tsx":"13","/Users/isamu/Desktop/jp/kelt/src/app/components/RecruitmentDetails.tsx":"14","/Users/isamu/Desktop/jp/kelt/src/app/components/SectionWithBackground.tsx":"15","/Users/isamu/Desktop/jp/kelt/src/app/components/layout.tsx":"16","/Users/isamu/Desktop/jp/kelt/src/app/components/logo.tsx":"17","/Users/isamu/Desktop/jp/kelt/src/pages/_app.tsx":"18","/Users/isamu/Desktop/jp/kelt/src/pages/_document.tsx":"19","/Users/isamu/Desktop/jp/kelt/src/pages/index.tsx":"20"},{"size":871,"mtime":1700030000564,"results":"21","hashOfConfig":"22"},{"size":1491,"mtime":1700217661415,"results":"23","hashOfConfig":"22"},{"size":1299,"mtime":1700217086742,"results":"24","hashOfConfig":"22"},{"size":2844,"mtime":1700161076708,"results":"25","hashOfConfig":"22"},{"size":1117,"mtime":1700217956057,"results":"26","hashOfConfig":"22"},{"size":3114,"mtime":1700231931427,"results":"27","hashOfConfig":"22"},{"size":9023,"mtime":1700163670550,"results":"28","hashOfConfig":"22"},{"size":291,"mtime":1700028681070,"results":"29","hashOfConfig":"22"},{"size":5947,"mtime":1700232686272,"results":"30","hashOfConfig":"22"},{"size":613,"mtime":1699893774431,"results":"31","hashOfConfig":"22"},{"size":919,"mtime":1699895955006,"results":"32","hashOfConfig":"22"},{"size":2849,"mtime":1700218415320,"results":"33","hashOfConfig":"22"},{"size":1814,"mtime":1699878332767,"results":"34","hashOfConfig":"22"},{"size":6337,"mtime":1700010301344,"results":"35","hashOfConfig":"22"},{"size":2234,"mtime":1700231889618,"results":"36","hashOfConfig":"22"},{"size":456,"mtime":1699680117732,"results":"37","hashOfConfig":"22"},{"size":512,"mtime":1700219644429,"results":"38","hashOfConfig":"22"},{"size":454,"mtime":1699897834988,"results":"39","hashOfConfig":"22"},{"size":307,"mtime":1699900000572,"results":"40","hashOfConfig":"22"},{"size":10297,"mtime":1700231771838,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"h6xdqu",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/isamu/Desktop/jp/kelt/src/app/components/Card.tsx",["109"],[],"import React, { ReactNode } from 'react';\n\ninterface CardProps {\n    imageUrl?: string;\n    title: string;\n    children: ReactNode;\n    isCol?: boolean;\n  }\n\nconst Card: React.FC<CardProps> = ({ imageUrl, title, children, isCol=false}) => {\n    const cardClass = isCol\n    ? 'flex-col' \n    : '';\n    return (\n      <div className={`flex items-center p-4 bg-white border-2 border-gray-200 rounded-lg shadow-sm ${cardClass}`}>\n        {imageUrl && <img alt={title} className=\"w-[50%] rounded-md border-2 border-gray-300\" src={imageUrl} style={{aspectRatio: \"1 / 1\",  objectFit: \"cover\"}}/>}\n        <div className=\"flex flex-col ml-5\">\n            <h4 className=\"text-[2vw] md:text-[1.1vw] font-semibold mb-2\">{title}</h4>\n            <p className=\"text-[1.8vw] md:text-[0.9vw] text-gray-800 mt-2\">{children}</p>\n        </div>\n      </div>\n    );\n  }\n\nexport default Card","/Users/isamu/Desktop/jp/kelt/src/app/components/CarouselType1.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/CeoMessage.tsx",["110"],[],"import React, { ReactNode } from 'react';\nimport '../../styles/CeoMessage.css'; // 必要なスタイルをインポート\nimport { useInView } from 'react-intersection-observer';\n\ntype CeoMessageProps = {\n    imageUrl: string;\n    title: string;\n    subtitle: string;\n    children: ReactNode;\n};\n\n\nconst CeoMessage: React.FC<CeoMessageProps> = ({ imageUrl, title, subtitle, children }) => {\n    const { ref, inView } = useInView({\n        /* オプション: 閾値やトリガー条件を設定 */\n        threshold: 0.3, // 例: 要素が50%表示された時にトリガー\n        triggerOnce: true, \n      });\n    return (\n        <div ref={ref} className={`relative gap-2 flex w-full ceo-content  ${inView ? 'animate' : ''}`} >\n            <div className=\"w-1/2 flex justify-center items-center left\">\n                <img src={imageUrl} alt=\"Description\" className=\"w-full h-auto\" />\n            </div>\n            <div className=\"w-1/2 pt-4 right\">\n                <h2 className=\"mb-4 text-[5vw] md:text-[2vw]\">{title}</h2>\n                {subtitle && <p className={`text-sm mt-2 text-[2.5vw] md:text-[0.95vw] `}>{subtitle}</p>}\n                <div className={`mt-2 text-[2.5vw] md:text-[0.95vw] `}>{children}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default CeoMessage;\n","/Users/isamu/Desktop/jp/kelt/src/app/components/ContactForm.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/DescriptionList.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/FirstView.tsx",["111"],[],"import React, { useEffect, useRef } from 'react';\nimport '@/styles/FirstView.css';\n\n// YouTube IFrame APIの型拡張\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady: () => void;\n  }\n}\n\ninterface FirstViewProps {\n  windowHeight: number;\n}\n\nconst FirstView: React.FC<FirstViewProps> = ({ windowHeight }) => {\n  const playerRef = useRef<HTMLDivElement>(null);\n  const redirectToYouTube = () => {\n    window.location.href = 'https://www.youtube.com/watch?v=KdXUgTywSUo';\n  };\n\n  useEffect(() => {\n    // スクリプトタグの挿入前にnullチェックを行う\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    if (firstScriptTag.parentNode) {\n      const tag = document.createElement('script');\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // onYouTubeIframeAPIReady にコールバックを設定\n    window.onYouTubeIframeAPIReady = () => {\n      // YouTube プレイヤーを初期化する\n      // 正しい型注釈をイベントハンドラに適用する\n      new YT.Player(playerRef.current!, {\n        videoId: 'KdXUgTywSUo',\n        playerVars: {\n          playsinline: 1,\n          autoplay: 1,\n          fs: 0,\n          rel: 0,\n          controls: 0,\n          modestbranding: 1,\n          iv_load_policy: 3,\n          start: 50,\n        },\n        events: {\n          onReady: (event: YT.PlayerEvent) => {\n            event.target.mute();\n            event.target.playVideo();\n          },\n          onStateChange: (event: YT.OnStateChangeEvent) => {\n            if (event.data === YT.PlayerState.ENDED) {\n              event.target.playVideo();\n            }\n          },\n        }\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"relative w-full mb-10\" style={{ height: `${windowHeight}px`}}>\n      {/* YouTube 動画を表示するためのコンテナ */}\n      <div ref={playerRef} id=\"player\" />\n\n      <h1 style={{\n        position: 'absolute',\n        top: '5%',\n\n        marginLeft: '50%',\n        transform: 'translate(-50%, -50%)',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        fontSize: '3vw',\n        color: 'white',\n        zIndex:100,\n      }}>\n        京大昆布干しインターンシップ\n      </h1>\n      <button\n        onClick={redirectToYouTube}\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n\n\n\n          padding: '15px',\n          cursor: 'pointer',\n          zIndex: 100,\n        }}\n      >\n        <img src='./images/kkrn_icon_saisei_11.svg' alt=\"Play\" style={{ width: '120px', height: '120px' }} />\n      </button>\n      {/* <img\n        src=\"./images/firstView.png\" // 画像のパスを指定\n        alt=\"First View Image\"\n        className=\"absolute w-full h-full object-cover\"\n      /> */}\n      <div id=\"scroll-down-prompt\" className=\"scrolldown-animation\">\n        <span>Scroll</span>\n        <div className=\"arrow\"></div>\n      </div>\n      {/* ... */}\n    </div>\n  );\n};\n\nexport default FirstView;\n","/Users/isamu/Desktop/jp/kelt/src/app/components/Footer.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/Grid.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/ImageScroll.tsx",["112","113","114","115","116","117","118","119","120"],[],"import React, { ReactNode, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport '../../styles/ImageScroll.css'; // 必要なスタイルをインポート\n\nconst ImageScroll = () => {\n    const [isSticky, setIsSticky] = useState(true);\n    const [ref, inView] = useInView({\n      threshold: 1, // 50%の要素が見えたらトリガー\n    });\n\n    React.useEffect(() => {\n        setIsSticky(!inView); // 要素がビューポートに入ったらstickyを無効化\n      }, [inView]);\n  const [leftContent, setLeftContent] = useState(<img className={`w-[100%] rounded-md border-2 border-gray-300 ${isSticky ? 'sticky-element' : ''}`} style={{aspectRatio: \"1 / 1\",  objectFit: \"cover\", objectPosition: 'right' }} src='./images/akao.png'/>);\n\n  const [ref1, inView1] = useInView({ threshold: 1 });\n  const [ref2, inView2] = useInView({ threshold: 1 });\n  const [ref3, inView3] = useInView({ threshold: 1 });\n\n  React.useEffect(() => {\n    if (inView1) setLeftContent(<img className={`w-[100%] rounded-md border-2 border-gray-300 ${isSticky ? 'sticky-element' : ''}`} style={{aspectRatio: \"1 / 1\",  objectFit: \"cover\", objectPosition: 'right' }} src='./images/akao.png'/>);\n    if (inView2) setLeftContent(<img className={`w-[100%] rounded-md border-2 border-gray-300 ${isSticky ? 'sticky-element' : ''}`} style={{aspectRatio: \"1 / 1\",  objectFit: \"cover\" }} src='./images/shiosaki.png'/>);\n    if (inView3) setLeftContent(<img className={`w-[100%] rounded-md border-2 border-gray-300 ${isSticky ? 'sticky-element' : ''}`} style={{aspectRatio: \"1 / 1\",  objectFit: \"cover\", objectPosition: '30%'  }} src='./images/ogino.png'/>);\n  }, [inView1, inView2, inView3]);\n\n  return (\n    <div className=\"container\">\n      <div >\n        {leftContent}\n      </div>\n      <div ref={ref} style={{height: \"240vh\", width: \"100%\"}}>\n        <div ref={ref1} className={'centered-content'} style={{ height: \"80vh\"}}>\n        <h2>【思い切って利尻に飛び込んだ】</h2>\n        <p>社会人になって数ヶ月、学生に比べると格段に短い夏休みですが今年も利尻に行きました。\n        今振り返ると学生最後の年、思い切って利尻に飛び込んで良かったと心から思います。</p>\n        <h2>【利尻に来るには好奇心だけで充分】</h2>\n        <p>利尻での経験が今の仕事に直接役立っているということではありません。これから先、役に立つ日が来るかも今はわかりません。それでも、役に立つ・立たないという土俵を超えて、利尻の山と海に囲まれた毎日は純粋に楽しく、新しい出会いに溢れていました。利尻が気になる、とりあえず暮らしてみたい、その好奇心だけで利尻に来るには充分だと思います。\n        <br />\n        赤尾 奏音さん\n        <br />（京都大学総合人間学部4回生、2021年度に参加）</p>\n        </div>\n\n        <div ref={ref2} className={'centered-content'} style={{ height: \"80vh\" }}>\n        <h2>【京大入学前から昆布を干そうと思っていた】</h2>\n        <p>京大生向けに利尻島での昆布干しバイトがあると知ったのは高校生の頃でした。そのときから昆布を干すという作業がなかなかできないものであるという理由で、京大に入ったら参加しようと心に決めていました。\n        2021年度はコロナの影響で大学の講義がオンラインで行われるものも多く、この機会を逃したら参加するのは難しいだろうと考え、応募しました。</p>\n        <h2>【利尻の学びを里山保全に活かす】</h2>\n        <p>学部で里山保全に関して学ぼうとしていますが、応募する段になって僻地の現状を現地の方に聞ける貴重な機会であると思いました。町役場で働いている受入先の漁師さんの弟さんや公営塾の講師の方をはじめとして色々な方にお話を聞くことができました。今後様々なフィールドで現地の方にお話を伺う土台となり大変有意義であったと感じています。<br />\n        塩崎 翔大\n        <br />（京都大学農学部1回生、2021年度に参加）</p>\n        </div>\n\n        <div ref={ref3} className={'centered-content'} style={{ height: \"80vh\" }}>\n        <h2>【昆布干しは今しかできないと思った】</h2>\n        <p>「いま行かないと今後人生で昆布を干すことはない気がする」、そう思い立って参加を決めました。昆布干しは朝3時から。朝起きるのは大変でしたが、利尻島の朝の新鮮な空気を吸い込みながら、島の人たちと一緒に汗を流し交流も楽しみながら昆布干しをすることができました。\n        　昆布干しで出逢う人たちは本当に暖かく、夏期だけ島に戻ってくるひとも、他の仕事の始業前に昆布を干すひとも、よそものである私たちをとてもやさしく迎え入れてくれました。漁師でないひとも日々天候を気にして昆布干しの有無を話題に出したり、自然とともに生きる島のひとの1日、１年、人生には”昆布”があることはとても新鮮に感じられました。</p>\n        <h2>【一生付き合いたいと思える仲間ができた】</h2>\n        <p>京大荘に帰ればひとつ屋根の下で同じ釜の飯を食べ、毎日大爆笑して、時に夜な夜な語り合い、時に衝突できる、2時半起床で通じ合った最高の仲間がいます。この仲間たちは一生の宝物です。<br />\n        荻野 なつれさん\n        <br />（京都大学大学院 アジア・アフリカ地域研究研究科 、2022年度に参加）</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageScroll;\n","/Users/isamu/Desktop/jp/kelt/src/app/components/ImageSlideShow.tsx",["121"],[],"import React from 'react';\n\ninterface ImageSlideshowProps {\n  images: string[];\n  currentImageIndex: number;\n}\n\nconst ImageSlideshow: React.FC<ImageSlideshowProps> = ({ images, currentImageIndex }) => {\n  return (\n    <div className=\"relative w-1/2\">\n      {images.map((image, index) => (\n        <img\n          key={image}\n          src={image}\n          alt={`Slide ${index}`}\n          className={`absolute inset-0 w-full h-full object-cover transition-opacity duration-1000 ${index === currentImageIndex ? 'opacity-100' : 'opacity-0'}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ImageSlideshow;\n","/Users/isamu/Desktop/jp/kelt/src/app/components/LoadingScreen.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/MessageSection.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/Navbar.tsx",["122"],[],"import React, { useState } from 'react';\n\nconst Navbar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"fixed top-0 right-0 p-2 z-50\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative w-20 h-20 z-10 flex flex-col justify-center items-center bg-[#208d78] rounded gap-2\"\n      >\n        <span className={`h-0.5 w-10 bg-white rounded transform transition duration-300 ease-in-out ${isOpen ? 'translate-y-2.5 rotate-45' : ''}`} />\n        <span className={`h-0.5 w-10 bg-white rounded transition duration-300 ease-in-out ${isOpen ? 'opacity-0' : ''}`} />\n        <span className={`h-0.5 w-10 bg-white rounded transform transition duration-300 ease-in-out ${isOpen ? '-translate-y-2.5 -rotate-45' : ''}`} />\n      </button>\n      <div\n        className={`fixed top-0 left-0 w-full h-screen bg-[#db5518] transform transition duration-300 ease-in-out ${isOpen ? 'translate-y-0' : '-translate-y-full'}`}\n      >\n            <ul className=\"flex flex-col items-center justify-center h-full\">\n            <li className=\"mb-4\"><a href=\"#ceo-message\">代表メッセージ</a></li>\n            <li className=\"mb-4\"><a href=\"#business-overview\">事業概要</a></li>\n            <li className=\"mb-4\"><a href=\"#accomplishment\">実績</a></li>\n            <li className=\"mb-4\"><a href=\"#comment-kyodaisei\">京大生の声</a></li>\n            <li className=\"mb-4\"><a href=\"#contact\">話を聞いてみる</a></li>\n            <li className=\"mb-4\">\n              <a href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"./images/instagram.png\" alt=\"Instagram\" className=\"w-6 h-6\" />\n              </a>\n            </li>\n            </ul>\n        </div>\n\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/isamu/Desktop/jp/kelt/src/app/components/RecruitmentDetails.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/SectionWithBackground.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/layout.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/app/components/logo.tsx",["123","124"],[],"import React from 'react';\nimport lllll from '../../../public/images/logo.svg'; // ロゴ画像のパスに置き換えてください\n\nconst Logo: React.FC = () => {\n  return (\n    <div className=\"fixed top-0 left-0 p-2 z-50\">\n      <a href=\"/\" className=\"flex items-center\">\n        <img src='./images/logo.svg' alt=\"サイトロゴ\" className=\"w-[100%]\" style={{aspectRatio: 1 / 1}}/> {/* ロゴのサイズは必要に応じて調整してください */}\n      </a>\n    </div>\n  );\n};\n\nexport default Logo;\n","/Users/isamu/Desktop/jp/kelt/src/pages/_app.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/pages/_document.tsx",[],[],"/Users/isamu/Desktop/jp/kelt/src/pages/index.tsx",[],[],{"ruleId":"125","severity":1,"message":"126","line":16,"column":22,"nodeType":"127","endLine":16,"endColumn":163},{"ruleId":"125","severity":1,"message":"126","line":22,"column":17,"nodeType":"127","endLine":22,"endColumn":83},{"ruleId":"125","severity":1,"message":"126","line":95,"column":9,"nodeType":"127","endLine":95,"endColumn":110},{"ruleId":"125","severity":1,"message":"126","line":14,"column":50,"nodeType":"127","endLine":14,"endColumn":253},{"ruleId":"128","severity":1,"message":"129","line":14,"column":50,"nodeType":"127","endLine":14,"endColumn":253},{"ruleId":"125","severity":1,"message":"126","line":21,"column":33,"nodeType":"127","endLine":21,"endColumn":236},{"ruleId":"128","severity":1,"message":"129","line":21,"column":33,"nodeType":"127","endLine":21,"endColumn":236},{"ruleId":"125","severity":1,"message":"126","line":22,"column":33,"nodeType":"127","endLine":22,"endColumn":215},{"ruleId":"128","severity":1,"message":"129","line":22,"column":33,"nodeType":"127","endLine":22,"endColumn":215},{"ruleId":"125","severity":1,"message":"126","line":23,"column":33,"nodeType":"127","endLine":23,"endColumn":236},{"ruleId":"128","severity":1,"message":"129","line":23,"column":33,"nodeType":"127","endLine":23,"endColumn":236},{"ruleId":"130","severity":1,"message":"131","line":24,"column":6,"nodeType":"132","endLine":24,"endColumn":33,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"126","line":12,"column":9,"nodeType":"127","endLine":17,"endColumn":11},{"ruleId":"125","severity":1,"message":"126","line":27,"column":17,"nodeType":"127","endLine":27,"endColumn":89},{"ruleId":"134","severity":2,"message":"135","line":7,"column":7,"nodeType":"127","endLine":7,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":8,"column":9,"nodeType":"127","endLine":8,"endColumn":101},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'isSticky'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLeftContent' needs the current value of 'isSticky'.","ArrayExpression",["136"],"@next/next/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages",{"desc":"137","fix":"138"},"Update the dependencies array to be: [inView1, inView2, inView3, isSticky]",{"range":"139","text":"140"},[1584,1611],"[inView1, inView2, inView3, isSticky]"]